@page "/"
@using BookManagement.Shared.Models.Dtos;
@inherits BooksBase

@if(Books == null){
    <div class="spinner"></div>
} else{
    @if (IsAddFormVisible)
    {
        <AddBookForm IsVisible="IsAddFormVisible" OnBookAdded="HandleBookAdded" OnClose="CloseAddForm" />
            
    }
	<h3 class="mb-5">
        Books
        <button class="btn btn-primary" @onclick="OpenAddForm">Add</button>
    </h3>

    var bookCount = Books.Count();
    @if (bookCount > 0)
    {
        const int itemsPerRow = 3;
        var bookRowList = new List<BookDto>();
        for (int i = 0; i < bookCount; i++)
        {
            bookRowList = Books.Skip(i * itemsPerRow).Take(itemsPerRow).ToList();

            <div class="card-deck">
                <div class="row mt-3">
                    @foreach (var item in bookRowList)
                    {
                        <div class="col-md-4 mb-2">
                            <div class="card">
                                <div class="card-img-top d-flex justify-content-center align-items-center">
                                    <i class="oi oi-book text-dark" style="font-size: 100px;"></i>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title mb-3" data-toggle="tooltip" data-placement="top" style="overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">@item.Title</h5>
                                    <p class="card-text">
                                        <b>@item.Author</b>
                                    </p>
                                </div>
                                <div class="card-footer text-center">
                                    <a href="#" class="btn btn-primary m-1">View</a>
                                    <a href="#" class="btn btn-primary m-1">Edit</a>
                                    <a href="#" class="btn btn-danger m-1">Delete</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
}

@code {
    private bool IsAddFormVisible = false;

    private void OpenAddForm()
    {
        IsAddFormVisible = true;
    }
    private void CloseAddForm()
    {
        IsAddFormVisible = false;
    }
    private async Task HandleBookAdded()
    {
        await LoadData(); // Tải lại dữ liệu trong MainPage
    }
}